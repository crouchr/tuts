<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite errors="0" failures="2" hostname="9d475fb9cb32" name="&quot;Vonage CCaaS TUTS&quot;" skipped="7" tests="39" time="1.182" timestamp="2020-09-22T06:40:49.344250"><testcase classname="module_tests.test_ci_coding_standard"   name="test_cs_01_input_vars_have_descriptions[server-database_server]" time="0.004"><failure message="AssertionError: 
  
  &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
  
  ===============================
  NVM Terraform Unit Test Results
  ===============================
  TEST ID: CS_01
  
  FAILURE LIST:
  Not all variables (num_vars=54) have a corresponding description (num_descs=56) in /modules/stacks/database_server/server/variable.tf
  &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
  
assert False">stack = &apos;database_server&apos;, module = &apos;server&apos;

    def test_cs_01_input_vars_have_descriptions(stack, module):
        &quot;&quot;&quot;
        *********************************************
        NVM Operations Terraform Coding Standard Test
        *********************************************
    
        The latest version of the NVM Operations Terraform Coding Standard is stored at
        https://newvoicemedia.atlassian.net/wiki/spaces/NT/pages/899383583/NVM+Operations+Terraform+Coding+Standard
    
        TEST ID : CS_01
    
        TEST PURPOSE : Check that every input variable in variable.tf has an associated description.
    
        This test does NOT check if the description is non-trivial - that is done in another test.
        &quot;&quot;&quot;
    
        _failures = []
    
        terraform_files = tuts_sdk_file_funcs.match_files_with_recursion(stack, module, &quot;variable.tf&quot;)
    
        num_terraform_files = len(terraform_files)
        if num_terraform_files is not 0:
    
            for file_under_test in terraform_files:
                result, _diagnostics = nvm_tf_coding_standard_low_level_funcs.all_variables_have_a_description(file_under_test)
                if not result:
                    _failures.append(_diagnostics)
    
        if _failures:
&gt;           assert False, tuts_sdk_assert_message.make_assert_message(&quot;CS_01&quot;, _failures)
E           AssertionError: 
E             
E             &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
E             
E             ===============================
E             NVM Terraform Unit Test Results
E             ===============================
E             TEST ID: CS_01
E             
E             FAILURE LIST:
E             Not all variables (num_vars=54) have a corresponding description (num_descs=56) in /modules/stacks/database_server/server/variable.tf
E             &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
E             
E           assert False

_diagnostics = [&apos;Not all variables (num_vars=54) have a corresponding description (num_descs=56) in /modules/stacks/database_server/server/variable.tf&apos;]
_failures  = [[&apos;Not all variables (num_vars=54) have a corresponding description (num_descs=56) in /modules/stacks/database_server/server/variable.tf&apos;]]
file_under_test = &apos;/workspace/aws-infrastructure/module_unit_testing/../modules/stacks/database_server/server/variable.tf&apos;
module     = &apos;server&apos;
num_terraform_files = 1
result     = False
stack      = &apos;database_server&apos;
terraform_files = [&apos;/workspace/aws-infrastructure/module_unit_testing/../modules/stacks/database_server/server/variable.tf&apos;]

module_tests/test_ci_coding_standard.py:58: AssertionError</failure></testcase><testcase classname="module_tests.test_ci_coding_standard"   name="test_cs_02_output_vars_have_descriptions[server-database_server]" time="0.002"></testcase><testcase classname="module_tests.test_ci_coding_standard"   name="test_cs_03_input_vars_descriptions_ok[server-database_server]" time="0.004"><failure message="AssertionError: 
  
  &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
  
  ===============================
  NVM Terraform Unit Test Results
  ===============================
  TEST ID: CS_03
  
  FAILURE LIST:
  Description=&quot;ops_nvm_house_office&quot; is not compliant (Description is a single word) @ 
  Description=&quot;vpn_global&quot; is not compliant (Description is a single word) @ 
  &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
  
assert False">stack = &apos;database_server&apos;, module = &apos;server&apos;

    def test_cs_03_input_vars_descriptions_ok(stack, module):
        &quot;&quot;&quot;
        *********************************************
        NVM Operations Terraform Coding Standard Test
        *********************************************
    
        The latest version of the NVM Operations Terraform Coding Standard is stored at
        https://newvoicemedia.atlassian.net/wiki/spaces/NT/pages/899383583/NVM+Operations+Terraform+Coding+Standard
    
        TEST ID : CS_03
    
        TEST PURPOSE : Check that every variable in variable.tf has a non-trivial description
        e.g.
        * The description is not empty (&quot;&quot;)
        * The description is not the same as the name of the variable
        * The description is only a few characters long etc.
        &quot;&quot;&quot;
    
        _failures = []
    
        terraform_files = tuts_sdk_file_funcs.match_files_with_recursion(stack, module, &quot;variable.tf&quot;)
    
        # Fail the test if can&apos;t find one and only one variable file to process
        num_terraform_files = len(terraform_files)
        if num_terraform_files is not 0:
            for file_under_test in terraform_files:
                result, _diagnostics = nvm_tf_coding_standard_low_level_funcs.all_descriptions_are_compliant(file_under_test)
                if not result:
                    _failures.append(_diagnostics)
    
        if _failures:
&gt;           assert False, tuts_sdk_assert_message.make_assert_message(&quot;CS_03&quot;, _failures)
E           AssertionError: 
E             
E             &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
E             
E             ===============================
E             NVM Terraform Unit Test Results
E             ===============================
E             TEST ID: CS_03
E             
E             FAILURE LIST:
E             Description=&quot;ops_nvm_house_office&quot; is not compliant (Description is a single word) @ 
E             Description=&quot;vpn_global&quot; is not compliant (Description is a single word) @ 
E             &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;
E             
E           assert False

_diagnostics = [&apos;Description=&quot;ops_nvm_house_office&quot; is not compliant (Description is a single word) @ 
_failures  = [[&apos;Description=&quot;ops_nvm_house_office&quot; is not compliant (Description is a single word) @ 
file_under_test = &apos;/workspace/aws-infrastructure/module_unit_testing/../modules/stacks/database_server/server/variable.tf&apos;
module     = &apos;server&apos;
num_terraform_files = 1
result     = False
stack      = &apos;database_server&apos;
terraform_files = [&apos;/workspace/aws-infrastructure/module_unit_testing/../modules/stacks/database_server/server/variable.tf&apos;]

module_tests/test_ci_coding_standard.py:128: AssertionError</failure></testcase><testcase classname="module_tests.test_ci_coding_standard"   name="test_cs_04_output_vars_descriptions_ok[server-database_server]" time="0.002"></testcase><testcase classname="module_tests.test_ci_coding_standard"   name="test_cs_05_var_and_resource_names_ok[server-database_server]" time="0.009"></testcase><testcase classname="module_tests.test_ci_coding_standard"   name="test_cs_06_module_readme_ok[server-database_server]" time="0.002"></testcase><testcase classname="module_tests.test_ci_coding_standard"   name="test_cs_07_tform_line_length_ok[server-database_server]" time="0.011"></testcase><testcase classname="module_tests.test_ci_coding_standard"   name="test_cs_08_tform_filename_ok[server-database_server]" time="0.001"></testcase><testcase classname="module_tests.test_ci_coding_standard"   name="test_cs_09_tform_filename_length_ok[server-database_server]" time="0.001"></testcase><testcase classname="module_tests.test_ci_coding_standard"   name="test_cs_10_tform_file_num_lines_ok[server-database_server]" time="0.011"></testcase><testcase classname="module_tests.test_ci_coding_standard"   name="test_cs_11_tform_file_open_tasks_ok[server-database_server]" time="0.003"></testcase><testcase classname="module_tests.test_ci_coding_standard"   name="test_cs_12_no_tform_imposter_filenames[server-database_server]" time="0.002"></testcase><testcase classname="module_tests.test_ci_coding_standard"   name="test_cs_13_local_vars_ok[Tf_plan/config/tf_unit_tests_config.yaml-server-database_server]" time="0.049"></testcase><testcase classname="module_tests.test_ci_lambda_policy"   name="test_lambda_01_func_has_description[server-database_server]" time="0.008"></testcase><testcase classname="module_tests.test_ci_lambda_policy"   name="test_lambda_02_func_in_lambda_filename[server-database_server]" time="0.008"></testcase><testcase classname="module_tests.test_ci_plan"   name="test_pl_01_aws_resources_destroyed[/artifacts-/artifacts/terraform_plan_hashicorp.json-Tf_plan/config/tf_unit_tests_config.yaml-server]" time="0.046"></testcase><testcase classname="module_tests.test_ci_plan"   name="test_pl_02_aws_resources_added[/artifacts-/artifacts/terraform_plan_hashicorp.json-Tf_plan/config/tf_unit_tests_config.yaml-server]" time="0.046"></testcase><testcase classname="module_tests.test_ci_plan"   name="test_pl_03_aws_resources_changed[/artifacts-/artifacts/terraform_plan_hashicorp.json-Tf_plan/config/tf_unit_tests_config.yaml-server]" time="0.046"></testcase><testcase classname="module_tests.test_ci_plan_warnings"   name="test_terraform_plan_no_warning[/artifacts/terraform_plan_hashicorp.json]" time="0.001"></testcase><testcase classname="module_tests.test_ci_plan_warnings"   name="test_terraform_plan_no_deprecated[/artifacts/terraform_plan_hashicorp.json]" time="0.001"></testcase><testcase classname="module_tests.test_ci_stack_tfvars_tags"   name="test_stack_tfvars_stage_default_tags[Tf_plan/config/tf_unit_tests_config.yaml-database_server-ci_build]" time="0.000"><skipped message="unconditional skip" type="pytest.skip">module_tests/test_ci_stack_tfvars_tags.py:24: unconditional skip</skipped></testcase><testcase classname="module_tests.test_ci_stack_tfvars_tags"   name="test_stack_tfvars_cloud_number_default_tags[database_server-ci_build]" time="0.000"><skipped message="unconditional skip" type="pytest.skip">module_tests/test_ci_stack_tfvars_tags.py:91: unconditional skip</skipped></testcase><testcase classname="module_tests.test_ci_stack_tfvars_tags"   name="test_stack_tfvars_built_by_default_tags[server-database_server-ci_build]" time="0.000"><skipped message="unconditional skip" type="pytest.skip">module_tests/test_ci_stack_tfvars_tags.py:134: unconditional skip</skipped></testcase><testcase classname="module_tests.test_ci_stack_tfvars_tags"   name="test_stack_tfvars_owner_team_default_tags[server-database_server-ci_build]" time="0.000"><skipped message="unconditional skip" type="pytest.skip">module_tests/test_ci_stack_tfvars_tags.py:192: unconditional skip</skipped></testcase><testcase classname="module_tests.test_ci_stack_tfvars_tags"   name="test_stack_tfvars_stack_default_tags[server-database_server-ci_build]" time="0.000"><skipped message="unconditional skip" type="pytest.skip">module_tests/test_ci_stack_tfvars_tags.py:250: unconditional skip</skipped></testcase><testcase classname="module_tests.test_ci_tagging_policy"   name="test_tag_01_name_tag_ok[/artifacts-/artifacts/terraform_plan_hashicorp.json-Tf_plan/config/tf_unit_tests_config.yaml-server]" time="0.047"></testcase><testcase classname="module_tests.test_ci_tagging_policy"   name="test_tag_02_owner_team_tag_ok[/artifacts-/artifacts/terraform_plan_hashicorp.json-Tf_plan/config/tf_unit_tests_config.yaml-server]" time="0.047"></testcase><testcase classname="module_tests.test_ci_tagging_policy"   name="test_tag_03_stack_tag_ok[/artifacts-/artifacts/terraform_plan_hashicorp.json-Tf_plan/config/tf_unit_tests_config.yaml-server]" time="0.060"></testcase><testcase classname="module_tests.test_ci_tagging_policy"   name="test_tag_04_cloud_number_tag_ok[/artifacts-/artifacts/terraform_plan_hashicorp.json-Tf_plan/config/tf_unit_tests_config.yaml-server-dev-cicd-dub-cid01]" time="0.046"></testcase><testcase classname="module_tests.test_ci_tagging_policy"   name="test_tag_05_environment_tag_ok[/artifacts-/artifacts/terraform_plan_hashicorp.json-Tf_plan/config/tf_unit_tests_config.yaml-server-dev-cicd-dub-cid01]" time="0.046"></testcase><testcase classname="module_tests.test_ci_tagging_policy"   name="test_tag_06_built_by_tag_ok[/artifacts-/artifacts/terraform_plan_hashicorp.json-Tf_plan/config/tf_unit_tests_config.yaml-server]" time="0.046"></testcase><testcase classname="module_tests.test_ci_tagging_policy"   name="test_tag_07_resource_name_ok[/artifacts-/artifacts/terraform_plan_hashicorp.json-Tf_plan/config/tf_unit_tests_config.yaml-server]" time="0.046"></testcase><testcase classname="module_tests.test_ci_tagging_policy"   name="test_tag_08_generic_tag_ok[/artifacts-/artifacts/terraform_plan_hashicorp.json-Tf_plan/config/tf_unit_tests_config.yaml-server]" time="0.046"></testcase><testcase classname="module_tests.test_ci_tagging_policy"   name="test_tag_09_deprecated_tag[/artifacts-/artifacts/terraform_plan_hashicorp.json-Tf_plan/config/tf_unit_tests_config.yaml-server]" time="0.046"></testcase><testcase classname="module_tests.test_ci_tagging_policy"   name="test_tag_10_name_tags_unique[/artifacts-/artifacts/terraform_plan_hashicorp.json-Tf_plan/config/tf_unit_tests_config.yaml-server]" time="0.000"><skipped message="unconditional skip" type="pytest.skip">module_tests/test_ci_tagging_policy.py:484: unconditional skip</skipped></testcase><testcase classname="module_tests.test_ci_tagging_policy"   name="test_tag_11_loadbalancer_tag_ok[/artifacts-/artifacts/terraform_plan_hashicorp.json-Tf_plan/config/tf_unit_tests_config.yaml-server]" time="0.046"></testcase><testcase classname="module_tests.test_terraform_version"   name="test_terraform_version[Tf_plan/config/tf_unit_tests_config.yaml-server-database_server-ci_build-0.12.17]" time="0.038"></testcase><testcase classname="module_tests.test_tuts_integration"   name="test_tuts_integration[/artifacts-/artifacts/terraform_plan_hashicorp.json-Tf_plan/config/tf_unit_tests_config.yaml-server-ci_build]" time="0.000"><skipped message="unconditional skip" type="pytest.skip">module_tests/test_tuts_integration.py:20: unconditional skip</skipped></testcase><testcase classname="module_tests.test_tuts_internal"   name="test_tuts_01_aws_resource_taggable_error[/artifacts-/artifacts/terraform_plan_hashicorp.json-Tf_plan/config/tf_unit_tests_config.yaml-server-ci_build]" time="0.046"></testcase></testsuite></testsuites>